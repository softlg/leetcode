package com.study.leetcode.oneQuestionPerDay;

import lombok.var;

import java.util.Arrays;

/**
 * @author c
 * @date 2023-7-4 19:21:31
 */
public class T2679_矩阵中的和 {
    /*
    难度：medium
    --------------------------------------------------------------------------------
    题目：
        给你一个下标从 0 开始的二维整数数组 nums 。一开始你的分数为 0 。你需要执行以下操作直到矩阵变为空：

        矩阵中每一行选取最大的一个数，并删除它。如果一行中有多个最大的数，选择任意一个并删除。
        在步骤 1 删除的所有数字中找到最大的一个数字，将它添加到你的 分数 中。
        请你返回最后的 分数 。
    --------------------------------------------------------------------------------
    解题思路：
        先遍历矩阵的每一行，将每一行排序。
        接下来，遍历矩阵的每一列，找到每一列的最大值，将这些最大值相加即可。
    --------------------------------------------------------------------------------
     */

    public int matrixSum(int[][] nums) {
        for (var row : nums) {
            Arrays.sort(row);
        }
        int ans = 0;
        for (int j = 0; j < nums[0].length; ++j) {
            int mx = 0;
            for (var row : nums) {
                mx = Math.max(mx, row[j]);
            }
            ans += mx;
        }
        return ans;
    }
}
