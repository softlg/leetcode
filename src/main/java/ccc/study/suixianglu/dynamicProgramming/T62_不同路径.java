package ccc.study.suixianglu.dynamicProgramming;

/**
 * @author c
 * @date 2023/3/26 22:02
 */
public class T62_不同路径 {
    /*
    难度：medium
    --------------------------------------------------------------------------------
    题目：
        一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。

        机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。

        问总共有多少条不同的路径？

        链接：https://leetcode.cn/problems/unique-paths
    --------------------------------------------------------------------------------
    解题思路：
        * 1. 确定dp数组下标含义 dp[i][j] 到每一个坐标可能的路径种类
         * 2. 递推公式 dp[i][j] = dp[i-1][j] dp[i][j-1]
         * 3. 初始化 dp[i][0]=1 dp[0][i]=1 初始化横竖就可
         * 4. 遍历顺序 一行一行遍历
         * 5. 推导结果 。。。。。。。。
    --------------------------------------------------------------------------------
     */

    public int uniquePaths(int m, int n) {
        // 确定dp
        int[][] dp = new int[m][n];
        // 初始化
        for(int i = 0; i < m; i++){
            dp[i][0] = 1;
        }
        for(int i = 0; i < n; i++){
            dp[0][i] = 1;
        }
        // 遍历
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        return dp[m - 1][n - 1];
    }

}
